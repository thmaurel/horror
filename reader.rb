def split(arr)
  arr.each_with_index do |el1,i|
    if el1.class == Array
      el1.each_with_index do |el2,j|
        if el2.class == Array
          el2.each_with_index do |el3,k|
            if el3.class == Array
              el3.each_with_index do |el4,l|
                arr[i][j][k][l] = [(el4 / 2.0).floor, (el4 / 2.0).ceil] if el4 >= 10
                return [arr, true] if el4 >= 10
              end
            elsif el3 >= 10
              arr[i][j][k] = [(el3 / 2.0).floor, (el3 / 2.0).ceil]
              return [arr, true]
            end
          end
        elsif el2 >= 10
          arr[i][j] = [(el2 / 2.0).floor, (el2 / 2.0).ceil]
          return [arr, true]
        end
      end
    elsif el1 >= 10
      arr[i] = [(el1 / 2.0).floor, (el1 / 2.0).ceil]
      return [arr, true]
    end
  end
  return [arr, false]
end

def explode(test)
  last = []
  test.each_with_index do |el1,i|
    last = [i] if el1.class == Integer
    if el1.class == Array
      el1.each_with_index do |el2,j|
        last = [i,j] if el2.class == Integer
        if el2.class == Array
          el2.each_with_index do |el3,k|
            last = [i,j,k] if el3.class == Integer
            if el3.class == Array
              el3.each_with_index do |el4,l|
                last = [i,j,k,l] if el4.class == Integer
                if el4.class == Array
                  left = el4.first
                  right = el4.last
                  if l == 0
                    if test[i][j][k][l+1].class == Integer
                      test[i][j][k][l+1] += right
                    else
                      test[i][j][k][l+1][0] += right
                    end

                    if k == 1
                      if test[i][j][0].class == Integer
                        test[i][j][0] += left
                      elsif  test[i][j][0][1].class == Integer
                        test[i][j][0][1] += left
                      end
                    elsif j == 1
                      if test[i][0].class == Integer
                        test[i][0] += left
                      elsif test[i][0][1].class == Integer
                        test[i][0][1] += left
                      elsif test[i][0][1][1].class == Integer
                        test[i][0][1][1] += left
                      end
                    elsif i == 1
                      if test[0].class == Integer
                        test[0] += left
                      elsif test[0][1].class == Integer
                        test[0][1] += left
                      elsif test[0][1][1].class == Integer
                        test[0][1][1] += left
                      elsif  test[0][1][1][1].class == Integer
                        test[0][1][1][1] += left
                      end
                    end


                  else
                    test[i][j][k][l-1] += left
                    if k == 0
                      if test[i][j][1].class == Integer
                        test[i][j][1] += right
                      elsif  test[i][j][1][0].class == Integer
                        test[i][j][1][0] += right
                      elsif  test[i][j][1][0][0].class == Integer
                        test[i][j][1][0][0] += right
                      end
                    elsif j == 0
                      if test[i][1].class == Integer
                        test[i][1] += right
                      elsif test[i][1][0].class == Integer
                        test[i][1][0] += right
                      elsif test[i][1][0][0].class == Integer
                        test[i][1][0][0] += right
                      elsif test[i][1][0][0][0].class == Integer
                        test[i][1][0][0][0] += right
                      end
                    elsif i == 0
                      if test[1].class == Integer
                        test[1] += right
                      elsif test[1][0].class == Integer
                        test[1][0] += right
                      elsif test[1][0][0].class == Integer
                        test[1][0][0] += right
                      elsif  test[1][0][0][0].class == Integer
                        test[1][0][0][0] += right
                      elsif test[1][0][0][0][0].class == Integer
                        test[1][0][0][0][0] += right
                      end
                    end
                  end
                  test[i][j][k][l] = 0
                  return [test, true]
                end
              end
            end
          end
        end
      end
    end
  end
  return [test, false]
end

def reduce(array)
  u = true
  while u
    t = true
    while t
      t = explode(array).last
    end
    u = split(array).last
  end
  return array
end

100.times do |i|
  100.times do |j|
  array_tot = [
                [[[[2,5],4],[[1,0],[8,3]]],[[2,[2,4]],[1,[3,3]]]],
                [[[2,2],[[4,3],3]],[[[8,6],3],[3,7]]],
                [[[9,[4,1]],[9,0]],[6,[6,0]]],
                [[[3,9],[[4,4],[2,5]]],[[9,[8,4]],8]],
                [[[[0,0],9],[[9,3],[8,2]]],[2,[1,3]]],
                [[[8,4],6],[[5,1],[3,6]]],
                [[[6,[7,6]],[[2,6],5]],[[6,4],2]],
                [[1,[9,7]],[[[5,9],[9,5]],[[7,0],1]]],
                [[[[5,8],[9,4]],[[9,3],[7,8]]],8],
                [[[0,9],[[6,0],7]],[[[7,7],6],[[9,7],[0,4]]]],
                [[[[4,3],[9,5]],[7,[7,3]]],[[[2,8],9],4]],
                [[7,5],[8,1]],
                [[4,6],[[[0,6],6],[7,4]]],
                [[[1,8],[[1,4],[1,6]]],[3,4]],
                [[[6,5],[4,[7,3]]],[[[0,1],[8,4]],[4,8]]],
                [[5,1],[9,[9,[3,3]]]],
                [[[[7,0],[2,5]],1],[9,[[2,7],[4,4]]]],
                [[[[5,8],8],0],[8,[1,[2,5]]]],
                [8,[[5,4],7]],
                [[[9,8],[6,7]],[[2,[2,6]],[9,6]]],
                [[[[2,3],7],6],[[8,6],3]],
                [[[8,[7,2]],3],[[[3,9],4],[6,8]]],
                [9,[[[6,7],[6,0]],[[3,9],8]]],
                [[[7,7],[4,7]],[[[9,8],9],[9,[2,4]]]],
                [[[[5,0],1],[4,[4,8]]],[9,[6,7]]],
                [[[[9,2],5],[1,[5,8]]],[[9,[0,1]],[3,8]]],
                [[[5,[2,5]],8],[2,[0,[9,3]]]],
                [[7,[[8,4],[8,4]]],4],
                [[[[3,3],4],[[0,0],[5,5]]],[4,5]],
                [[[[9,3],[9,3]],2],[5,3]],
                [[[9,5],[1,4]],[[7,1],[3,[6,5]]]],
                [8,[[[1,1],[0,1]],[9,[3,6]]]],
                [[[[4,4],7],[0,3]],[1,5]],
                [[[3,[0,8]],8],[5,[7,5]]],
                [[[[9,6],2],7],[[5,[3,7]],0]],
                [4,9],
                [[[5,[1,3]],[[9,5],6]],[[[7,9],5],3]],
                [[[[3,9],[7,2]],[5,[8,8]]],[1,9]],
                [[[[7,8],8],[[9,0],[5,1]]],[6,[[1,0],[3,3]]]],
                [[[[5,8],1],[[8,6],[2,9]]],[[5,1],6]],
                [[1,7],[[5,[3,2]],4]],
                [[[[3,1],2],[0,8]],[3,[4,6]]],
                [[9,6],[0,[[5,2],[1,1]]]],
                [[[[1,8],8],[[9,0],3]],[[6,[2,8]],[[6,4],[6,0]]]],
                [[7,[[3,2],[9,0]]],[[[3,2],[2,8]],[[5,5],[9,2]]]],
                [[[[2,5],[3,1]],[7,[9,6]]],[[[7,0],7],[2,[9,1]]]],
                [[[[1,6],9],[1,[6,5]]],[[8,[4,1]],6]],
                [[[7,[4,6]],[[2,7],[6,6]]],[8,0]],
                [[9,7],[[[0,7],5],[[1,4],[1,3]]]],
                [[[1,[8,2]],[[0,6],[9,0]]],8],
                [[[4,0],[7,[3,3]]],[9,6]],
                [0,[[[6,9],7],[[0,6],1]]],
                [5,[[4,3],[[8,3],[5,7]]]],
                [[9,0],[0,[[7,8],[1,8]]]],
                [[[[4,3],[5,6]],2],[[2,3],1]],
                [4,[[9,9],[[1,8],[9,2]]]],
                [[[[6,9],5],1],[[[7,4],[8,1]],3]],
                [[8,[5,[2,6]]],[[[2,7],6],[6,0]]],
                [[[[6,8],8],6],[[[5,7],2],[[6,5],[3,0]]]],
                [[[1,[2,5]],3],[5,[4,[6,6]]]],
                [[[[4,9],8],1],[9,0]],
                [[1,[0,[5,7]]],[[1,[5,9]],[[3,2],[1,7]]]],
                [[[[2,9],[2,7]],[[4,2],5]],[[[9,1],[7,2]],[2,[7,5]]]],
                [[[[5,7],[8,9]],[5,[7,9]]],[[7,[6,6]],[7,[8,0]]]],
                [[[[6,6],[4,6]],[4,[7,8]]],[1,[[5,5],[1,9]]]],
                [[[[4,3],8],2],[[9,[4,0]],[8,[7,0]]]],
                [[2,[7,5]],[[[0,1],1],[8,[3,5]]]],
                [[[4,[4,2]],[[0,4],9]],[1,4]],
                [[[5,5],[5,6]],[[0,[4,2]],[[7,8],[5,6]]]],
                [2,[[0,[9,1]],[[1,7],[0,0]]]],
                [[[5,[4,8]],1],9],
                [8,[[2,1],[3,0]]],
                [[[[6,5],[1,1]],7],[[[7,5],3],[0,1]]],
                [[[[0,3],7],7],[[[4,8],[6,1]],[[6,1],9]]],
                [[[[4,8],9],[1,0]],[6,[4,[4,8]]]],
                [[[[8,0],[5,1]],6],1],
                [[[[6,6],[7,7]],[[4,3],[2,6]]],[[3,5],[[7,0],[7,3]]]],
                [[1,[5,8]],[[[3,7],[9,6]],[[4,8],[3,4]]]],
                [[[1,5],[8,2]],[[[3,1],5],[4,1]]],
                [[[[6,3],5],8],[[9,[3,6]],[[3,5],[6,9]]]],
                [[[7,[5,4]],[0,[6,0]]],[[[7,7],[1,1]],[[5,1],7]]],
                [[[1,5],[[8,6],0]],5],
                [[[[0,8],[6,0]],[[3,0],9]],[[[7,1],2],[4,2]]],
                [[[6,[8,7]],[2,[2,0]]],[9,[7,[6,6]]]],
                [3,[[7,[4,5]],[[8,5],4]]],
                [[[[8,0],[8,3]],[[5,4],[1,6]]],[[0,[8,5]],3]],
                [[[7,2],1],[9,[[3,8],4]]],
                [[4,[7,[9,9]]],[3,8]],
                [[[[7,1],9],[[6,9],[9,6]]],[2,0]],
                [[[[6,2],9],[3,[3,9]]],[[8,[3,4]],[3,7]]],
                [[4,9],[8,[5,[9,8]]]],
                [3,[[9,[9,7]],4]],
                [[[[5,9],6],[1,[3,1]]],[4,[1,[3,8]]]],
                [[[[7,6],2],3],[[0,[1,8]],[[4,9],[4,3]]]],
                [[3,[[8,1],[3,8]]],[[[2,0],[0,8]],[[7,0],9]]],
                [[[[9,7],[9,3]],[[5,8],6]],[[[6,2],0],[2,4]]],
                [[[8,[9,7]],[[5,1],[1,4]]],3],
                [[7,[[5,6],[2,7]]],[[[7,3],0],[1,[0,6]]]],
                [[2,[[5,5],2]],[[3,[7,2]],[[7,1],8]]],
                [[[[2,4],[6,8]],[0,[7,5]]],[[3,[2,5]],[7,7]]]
                ]
    if j != i
    work = [array_tot[i], array_tot[j]]
    reduce(work)
    test = work
    test.each_with_index do |el1,i|
      if el1.class == Array
        el1.each_with_index do |el2,j|
          last = [i,j] if el2.class == Integer
          if el2.class == Array
            el2.each_with_index do |el3,k|
              if el3.class == Array
                test[i][j][k] = 3 * test[i][j][k].first + 2 * test[i][j][k].last
              end
            end
            test[i][j] = 3 * test[i][j].first + 2 * test[i][j].last
          end
        end
        test[i] = 3 * test[i].first + 2 * test[i].last
      end
    end

      maxs <<  test.first * 3 + 2 * test.last
    end
  end
end
p maxs.max
